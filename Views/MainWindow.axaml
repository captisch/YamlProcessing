<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:YamlProcessing.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:YamlProcessing.Models"
        xmlns:t="using:YamlProcessing.Templates"
        xmlns:conv="using:YamlProcessing.Converters"
        mc:Ignorable="d"
        Width="600" Height="600"
        x:Class="YamlProcessing.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="YamlProcessing">
        
        <Window.Resources>
            <conv:StringToBoolConverter x:Key="StringToBoolConverter" />
            <conv:ScientificToIntegerStringConverter x:Key="ScientificToIntegerStringConverter"/>
            
            <!-- Template für OpenString -->
            <DataTemplate x:Key="OpenStringItemTemplate" DataType="models:ConfigItem">
                <Grid ColumnDefinitions="250,*" ColumnSpacing="8" IsEnabled="{Binding Access}" Margin="2">
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Text="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center"/>
                </Grid>
                
            </DataTemplate>
            
            <!-- Template für Boolean -->
            <DataTemplate x:Key="BooleanItemTemplate" DataType="models:ConfigItem">
                <Grid ColumnDefinitions="250,*" ColumnSpacing="8" IsEnabled="{Binding Access}" Margin="2">
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                    <!-- Value ist string; CheckBox braucht bool: einfacher Inline-Converter -->
                    <CheckBox Grid.Column="1" VerticalAlignment="Center">
                        <CheckBox.IsChecked>
                            <Binding Path="Value" Mode="TwoWay" Converter="{StaticResource StringToBoolConverter}"/>
                        </CheckBox.IsChecked>
                    </CheckBox>
                </Grid>
            </DataTemplate>

            <!-- Template für RestrictedString -->
            <DataTemplate x:Key="RestrictedStringItemTemplate" DataType="models:ConfigItem">
                <Grid ColumnDefinitions="250,*" 
                      ColumnSpacing="8"
                      IsEnabled="{Binding Access}"
                      Margin="2">
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                    <ComboBox Grid.Column="1"
                              ItemsSource="{Binding options}"
                              SelectedItem="{Binding Value, Mode=TwoWay}"
                              VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
            
            <!-- Template für Integer (wissenschaftliche Notation erlaubt) -->
            <DataTemplate x:Key="IntegerItemTemplate" DataType="models:ConfigItem">
                <Grid ColumnDefinitions="250,*" ColumnSpacing="8" IsEnabled="{Binding Access}" Margin="2">
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1"
                             Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ScientificToIntegerStringConverter}}"
                             Watermark="z. B. 1500, 1.5e3, 2E+6" 
                             VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
            
            <DataTemplate x:Key="FilePathTemplate" DataType="models:ConfigItem">
                <Grid ColumnDefinitions="250,Auto,*" ColumnSpacing="8" IsEnabled="{Binding Access}" Margin="2">
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                    <Button Grid.Column="1"
                            Content="Choose output directory"
                            Command="{Binding Path=$parent[Window].DataContext.ChooseOutputDirectoryCommand}"
                            CommandParameter="{Binding .}"
                            VerticalAlignment="Center"/>
                    <TextBox Grid.Column="2"
                             Text="{Binding Value, Mode=OneWay}"
                             VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
            

            <!-- Optional: Fallback-Template für andere Typen -->
            <DataTemplate x:Key="DefaultItemTemplate" DataType="models:ConfigItem">
                <Grid ColumnDefinitions="200,*" ColumnSpacing="8" IsEnabled="{Binding Access}" Margin="2">
                    <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Text="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>

            <!-- Template-Selector-Instanz -->
            <t:ConfigItemTemplateSelector
                x:Key="ConfigItemTemplateSelector"
                OpenStringTemplate="{StaticResource OpenStringItemTemplate}"
                BooleanTemplate="{StaticResource BooleanItemTemplate}"
                RestrictedStringTemplate="{StaticResource RestrictedStringItemTemplate}"
                IntegerTemplate="{StaticResource IntegerItemTemplate}"
                FilePathTemplate="{StaticResource FilePathTemplate}"
                DefaultTemplate="{StaticResource DefaultItemTemplate}" />
        </Window.Resources>

        <Border Margin="10">
            <DockPanel >
                
                <StackPanel Orientation="Horizontal"
                            DockPanel.Dock="Top"
                            Margin="8"
                            Spacing="8">
                    <Button Content="Save"
                            Command="{Binding SaveCommand}"/>
                    <Button Content="Add Ext. Module"
                            Command="{Binding AddExternalModuleCommand}"/>
                </StackPanel>
                <ScrollViewer DockPanel.Dock="Bottom"
                              AllowAutoHide="True" 
                              Padding="0,0,10,-10">
                    <ItemsControl ItemsSource="{Binding items}"
                                  ItemTemplate="{StaticResource ConfigItemTemplateSelector}"/>
                </ScrollViewer>
                
            </DockPanel>
        </Border>
        
</Window>
